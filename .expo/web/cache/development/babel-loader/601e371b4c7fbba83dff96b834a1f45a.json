{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/var/www/html/johnR/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Constants from 'expo-constants';\nimport CaroselView from \"./components/ScrollPage/CaroselView\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport moment from \"moment\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StackActions, NavigationContainer } from '@react-navigation/native';\nimport Router from \"./Router\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: [],\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var fetchData = function fetchData() {\n        var response, parseObject;\n        return _regeneratorRuntime.async(function fetchData$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(fetch('https://www.cs.virginia.edu/~dgg6b/Mobile/ScrollLabJSON/cards.json'));\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return _regeneratorRuntime.awrap(response.json());\n\n              case 5:\n                parseObject = _context.sent;\n\n                _this2.setState({\n                  data: parseObject\n                });\n\n                _this2.setState({\n                  loading: false\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      };\n\n      fetchData();\n    }\n  }, {\n    key: \"assignIDs\",\n    value: function assignIDs(events) {\n      return events.map(function (event, index) {\n        event.id = index;\n        event.date = moment(event.date, \"DD-MM-YYYY hh:mm:ss\");\n        return event;\n      });\n    }\n  }, {\n    key: \"eventsPending\",\n    value: function eventsPending(events) {\n      return events.filter(function (event) {\n        return event.accepted === undefined ? true : false;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          height: 40,\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }), React.createElement(LinearGradient, {\n        colors: ['#FFFFFF', '#D3DAEB', '#FFFFFF'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, React.createElement(CaroselView, {\n        eventsData: this.state.data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\",\n    justifyContent: 'flex-start',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: 'white'\n  }\n});","map":{"version":3,"sources":["/var/www/html/johnR/App.js"],"names":["React","Constants","CaroselView","LinearGradient","moment","createStackNavigator","StackActions","NavigationContainer","Router","App","state","data","loading","fetchData","fetch","response","json","parseObject","setState","events","map","event","index","id","date","filter","accepted","undefined","styles","container","height","width","Component","StyleSheet","create","flex","justifyContent","paddingTop","statusBarHeight","backgroundColor"],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,WAAP;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,YAAT,EAAuBC,mBAAvB,QAAkD,0BAAlD;AAEA,OAAOC,MAAP;;IAaqBC,G;;;;;;;;;;;;;;;UAGnBC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,OAAO,EAAE;AAFH,K;;;;;;wCAKY;AAAA;;AAClB,UAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDACKC,KAAK,CACxB,oEADwB,CADV;;AAAA;AACZC,gBAAAA,QADY;AAAA;AAAA,iDAIQA,QAAQ,CAACC,IAAT,EAJR;;AAAA;AAIZC,gBAAAA,WAJY;;AAKhB,gBAAA,MAAI,CAACC,QAAL,CAAc;AAAEP,kBAAAA,IAAI,EAAEM;AAAR,iBAAd;;AACA,gBAAA,MAAI,CAACC,QAAL,CAAc;AAAEN,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;AANgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAlB;;AASAC,MAAAA,SAAS;AACV;;;8BAISM,M,EAAQ;AAChB,aAAOA,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAClCD,QAAAA,KAAK,CAACE,EAAN,GAAWD,KAAX;AACAD,QAAAA,KAAK,CAACG,IAAN,GAAapB,MAAM,CAACiB,KAAK,CAACG,IAAP,EAAa,qBAAb,CAAnB;AACA,eAAOH,KAAP;AACD,OAJM,CAAP;AAKD;;;kCAGaF,M,EAAQ;AACpB,aAAOA,MAAM,CAACM,MAAP,CAAc,UAAAJ,KAAK,EAAI;AAC5B,eAAOA,KAAK,CAACK,QAAN,KAAmBC,SAAnB,GAA+B,IAA/B,GAAsC,KAA7C;AACD,OAFM,CAAP;AAGD;;;6BAKQ;AAUP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,EAAV;AAAcC,UAAAA,KAAK,EAAE;AAArB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,cAAD;AACE,QAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,CADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,WAAD;AAAa,QAAA,UAAU,EAAE,KAAKrB,KAAL,CAAWC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFF,CADF;AASD;;;;EA5D8BX,KAAK,CAACgC,S;;SAAlBvB,G;AAkErB,IAAMmB,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETL,IAAAA,MAAM,EAAE,MAFC;AAGTC,IAAAA,KAAK,EAAE,MAHE;AAITK,IAAAA,cAAc,EAAE,YAJP;AAKTC,IAAAA,UAAU,EAAEpC,SAAS,CAACqC,eALb;AAMTC,IAAAA,eAAe,EAAE;AANR;AADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport Constants from 'expo-constants';\nimport CaroselView from './components/ScrollPage/CaroselView'\nimport { LinearGradient } from 'expo-linear-gradient';\nimport moment from \"moment\";\nimport { createStackNavigator } from '@react-navigation/stack'\nimport { StackActions, NavigationContainer } from '@react-navigation/native';\n\nimport Router from './Router';\n\n/*\nconst rootStack = createStackNavigator({\n  Home: { screen: CaroselView },\n})\n*/\n\n//Keep the data at the highest level and then \n//have it flow to lower sub components. \n\n\n//converted to functional component \nexport default class App extends React.Component {\n  //Screen really only has two states\n  //Month and events \n  state = {\n    data: [],\n    loading: true,\n  };\n\n  componentDidMount() {\n    const fetchData = async () => {\n      let response = await fetch(\n        'https://www.cs.virginia.edu/~dgg6b/Mobile/ScrollLabJSON/cards.json'\n      );\n      let parseObject = await response.json();\n      this.setState({ data: parseObject });\n      this.setState({ loading: false });\n      //Setup call set State, \n    };\n    fetchData();\n  }\n\n\n  //AssignIDs and formats dates \n  assignIDs(events) {\n    return events.map((event, index) => {\n      event.id = index\n      event.date = moment(event.date, \"DD-MM-YYYY hh:mm:ss\")\n      return event\n    })\n  }\n\n  ////Method that filters Events Pending\n  eventsPending(events) {\n    return events.filter(event => {\n      return event.accepted === undefined ? true : false\n    })\n  }\n\n\n\n\n  render() {\n    //Rember to pass your pending events to the Carosel View.\n    //Using the correct Prop. \n   /* return (\n      <NavigationContainer>\n        <rootStack.Navigator initialRouteName=\"LoadingScreen\">\n          <rootStack.Screen name=\"LoadingScreen\" assets={SplashNavigation.png}/>\n        </rootStack.Navigator>\n      </NavigationContainer>\n    );*/\n    return (\n      <View style={styles.container}>\n        <View style={{ height: 40, width: \"100%\" }} />\n        <LinearGradient\n          colors={['#FFFFFF', '#D3DAEB', '#FFFFFF']}>\n          <CaroselView eventsData={this.state.data} />\n        </LinearGradient>\n      </View>\n    );\n  }\n}\n\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: \"100%\",\n    width: \"100%\",\n    justifyContent: 'flex-start',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: 'white',\n  }\n});"]},"metadata":{},"sourceType":"module"}